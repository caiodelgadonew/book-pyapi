name: ECS - Infrastructure Deployment

on: [push, pull_request]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:

  lint:
    name: Terraform Lint and Validate
    runs-on: ubuntu-22.04
    defaults:
        run:
          working-directory: infra/ecs

    steps:
    - uses: actions/checkout@v3
    

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.8

    - name: Terraform init
      run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" -backend-config="dynamodb_table=${{ vars.TF_STATE_BUCKET }}"
    
    - name: Terraform FMT
      run: terraform fmt --recursive -check
      working-directory: infra
    
    - name: Terraform Validate - ECS
      run: terraform validate
    

  plan:
    name: Terraform Plan
    needs: lint
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: infra/ecs

    steps:
    - uses: actions/checkout@v3
    

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.8

    - name: Terraform init
      run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" -backend-config="dynamodb_table=${{ vars.TF_STATE_BUCKET }}"
    
    - name: Terraform Plan
      run: terraform plan
      continue-on-error: true


  apply:
    name: Terraform Apply
    if: github.event.pull_request.merged == true
    needs: plan

    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: infra/ecs

    steps:
    - uses: actions/checkout@v3
    

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.8

    - name: Terraform init
      run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" -backend-config="dynamodb_table=${{ vars.TF_STATE_BUCKET }}"
    
    - name: Terraform Apply   
      run: terraform apply -auto-approve
